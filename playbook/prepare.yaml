---
- name: Prepare environment for openBCE
  hosts: all
  vars_files:
    - ../bce.yaml
  vars:
    dep_items: ["socat", "conntrack", "ebtables", "containerd"]
    sbin_items: ["kubelet", "crictl", "kubectl", "kubeadm"]
    mod_items: ["overlay", "br_netfilter", "nf_conntrack_tftp", "nf_nat_tftp"]
  tasks:
  - name: Make working directory
    file: path={{work_dir}} state=directory mode=0755 force=true
  # Deploy openBCE binaries
  - name: Deploy binaries
    copy: src=../sbin/{{ item }} dest=/usr/bin/{{ item }} owner=root group=root mode=0755
    with_items: "{{ sbin_items }}"

  - name: Disable swap for kubelet
    command: swapoff -a
    become: true

  # Set up network
  - name: Install Network dependencies
    package: name="{{ dep_items }}" state=present
  - name: Copy openBCE modules
    copy: src=templates/bce.modules dest=/etc/modules-load.d/bce.conf owner=root group=root mode=0644
  - name: Copy openBCE sysctl
    copy: src=templates/bce.sysctl dest=/etc/sysctl.d/bce.conf owner=root group=root mode=0644
  - name: Enable openBCE modules
    shell: modprobe {{ item }}
    with_items: "{{ mod_items }}"
  - name: Enable openBCE sysctl
    shell: sysctl --system

    # Setup containerd
  - name: Make containerd configuration directory
    file: path=/etc/containerd state=directory mode=0755
  - name: Update containerd configuration
    template: src=templates/containerd.toml.j2 dest=/etc/containerd/config.toml
  - name: Enable containerd
    service: name=containerd enabled=yes
  - name: Restart containerd
    service: name=containerd state=restarted

  # Setup kubelet
  - name: Create kubelet manifests directory
    file:
      path: "/etc/kubernetes/manifests"
      state: directory
      mode: '0755'
  - name: Copy kubelet service
    copy: src=templates/kubelet.service dest=/etc/systemd/system/kubelet.service owner=root group=root mode=0644
  - name: Enable kubelet
    service: name=kubelet enabled=yes
  - name: Restart kubelet
    service: name=kubelet state=restarted
